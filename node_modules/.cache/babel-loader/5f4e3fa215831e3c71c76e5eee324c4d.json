{"ast":null,"code":"var _jsxFileName = \"/home/atsal/Desktop/top/secure-projects/waldogamef/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer() {\n  _s();\n\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  useEffect(() => {\n    let interval = null;\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0\" + (time / 10 % 100).splice(-2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTimerOn(true),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTimerOn(false),\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTimerOn(true),\n      children: \"Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTime(0),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"snp1kxavGO7tjRfbaxEOQxv4YU8=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/atsal/Desktop/top/secure-projects/waldogamef/src/Timer.js"],"names":["React","useState","useEffect","Timer","time","setTime","timerOn","setTimerOn","interval","setInterval","prevTime","clearInterval","splice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,QAAQ,GAAG,IAAf;;AAEA,QAAGF,OAAH,EAAY;AACVE,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BJ,QAAAA,OAAO,CAACK,QAAQ,IAAIA,QAAQ,GAAG,EAAxB,CAAP;AACD,OAFqB,EAEpB,EAFoB,CAAtB;AAGD,KAJD,MAIO;AACHC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH;;AAED,WAAO,MAAMG,aAAa,CAACH,QAAD,CAA1B;AAEH,GAbQ,EAaN,CAACF,OAAD,CAbM,CAAT;AAeA,sBACI;AAAA,4BACI;AAAA,6BAAK;AAAA,kBAAO,MAAM,CAAEF,IAAI,GAAG,EAAR,GAAc,GAAf,EAAoBQ,MAApB,CAA2B,CAAC,CAA5B;AAAb;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAML,UAAU,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,CAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA5BQF,K;;KAAAA,K;AA+BT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Timer() {\n    const [time, setTime] = useState(0);\n    const [timerOn, setTimerOn] = useState(false);\n\n    useEffect(() => {\n        let interval = null;\n\n        if(timerOn) {\n          interval = setInterval(() => {\n            setTime(prevTime => prevTime + 10)\n          },10)\n        } else {\n            clearInterval(interval)\n        }\n\n        return () => clearInterval(interval)\n\n    }, [timerOn])\n\n    return (\n        <div>\n            <div><span>{\"0\" + ((time / 10) % 100).splice(-2)}</span></div>\n            <button onClick={() => setTimerOn(true)}>Start</button>\n            <button onClick={() => setTimerOn(false)}>Stop</button>\n            <button onClick={() => setTimerOn(true)}>Resume</button>\n            <button onClick={() => setTime(0)}>Reset</button>\n        </div>\n    )\n}\n\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}