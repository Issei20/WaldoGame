{"ast":null,"code":"var _jsxFileName = \"/home/atsal/Desktop/top/secure-projects/waldogamef/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { doc, setDoc, Timestamp, updateDoc, getDocs, getDoc, collection } from \"firebase/firestore\";\nimport { db } from './firebase-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer(_ref) {\n  _s();\n\n  let {\n    gameOver\n  } = _ref;\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(true);\n  const scoresAnonymousRef = doc(db, 'scores', 'anonymousUser');\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n\n  async function saveDataStart() {\n    await updateDoc(scoresAnonymousRef, {\n      startTime: startTime\n    });\n  }\n\n  async function saveDataEnd() {\n    await updateDoc(scoresAnonymousRef, {\n      endTime: endTime\n    });\n  }\n\n  useEffect(() => {\n    let interval = null;\n\n    if (gameOver === true) {\n      setTimerOn(false);\n      setEndTime(Date.now() / 1000);\n      saveDataEnd();\n    }\n\n    if (timerOn && !gameOver) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n      setStartTime(Date.now() / 1000);\n      saveDataStart();\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 60000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 1000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (\"0\" + time / 10 % 100).slice(-2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"Sz9COfTjEWfzm5fEaGXnxv9PN/E=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/atsal/Desktop/top/secure-projects/waldogamef/src/Timer.js"],"names":["React","useState","useEffect","doc","setDoc","Timestamp","updateDoc","getDocs","getDoc","collection","db","Timer","gameOver","time","setTime","timerOn","setTimerOn","scoresAnonymousRef","startTime","setStartTime","endTime","setEndTime","saveDataStart","saveDataEnd","interval","Date","now","setInterval","prevTime","clearInterval","Math","floor","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,MAArD,EAA6DC,UAA7D,QAA+E,oBAA/E;AACA,SAASC,EAAT,QAAmB,mBAAnB;;;AAEA,SAASC,KAAT,OAA6B;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMgB,kBAAkB,GAAGd,GAAG,CAACO,EAAD,EAAK,QAAL,EAAe,eAAf,CAA9B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,CAAD,CAAtC;;AAEH,iBAAeqB,aAAf,GAA+B;AAC5B,UAAMhB,SAAS,CAACW,kBAAD,EAAqB;AAChCC,MAAAA,SAAS,EAAEA;AADqB,KAArB,CAAf;AAGC;;AAGH,iBAAeK,WAAf,GAA6B;AAC3B,UAAMjB,SAAS,CAACW,kBAAD,EAAqB;AAAEG,MAAAA,OAAO,EAAEA;AAAX,KAArB,CAAf;AACD;;AAGClB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,QAAQ,GAAG,IAAf;;AAEA,QAAGZ,QAAQ,KAAK,IAAhB,EAAsB;AAClBI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,MAAAA,UAAU,CAACI,IAAI,CAACC,GAAL,KAAW,IAAZ,CAAV;AACAH,MAAAA,WAAW;AAEd;;AAED,QAAGR,OAAO,IAAI,CAACH,QAAf,EAAyB;AACvBY,MAAAA,QAAQ,GAAGG,WAAW,CAAC,MAAM;AAC3Bb,QAAAA,OAAO,CAACc,QAAQ,IAAIA,QAAQ,GAAG,EAAxB,CAAP;AACD,OAFqB,EAEpB,EAFoB,CAAtB;AAGAT,MAAAA,YAAY,CAACM,IAAI,CAACC,GAAL,KAAW,IAAZ,CAAZ;AACAJ,MAAAA,aAAa;AAGd,KARD,MAQO;AACHO,MAAAA,aAAa,CAACL,QAAD,CAAb;AACH;;AAED,WAAO,MAAMK,aAAa,CAACL,QAAD,CAA1B;AAEH,GAxBQ,EAwBN,CAACT,OAAD,EAAUH,QAAV,CAxBM,CAAT;AA4BA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAA,8BACA;AAAA,mBAAO,CAAC,MAAMkB,IAAI,CAACC,KAAL,CAAYlB,IAAI,GAAG,KAAR,GAAiB,EAA5B,CAAP,EAAwCmB,KAAxC,CAA8C,CAAC,CAA/C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,mBAAO,CAAC,MAAMF,IAAI,CAACC,KAAL,CAAYlB,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAP,EAAuCmB,KAAvC,CAA6C,CAAC,CAA9C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,kBAAO,CAAC,MAAQnB,IAAI,GAAG,EAAR,GAAc,GAAtB,EAA4BmB,KAA5B,CAAkC,CAAC,CAAnC;AAAP;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAxDQrB,K;;KAAAA,K;AA2DT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { doc, setDoc, Timestamp, updateDoc, getDocs, getDoc, collection } from \"firebase/firestore\"; \nimport { db } from './firebase-config';\n\nfunction Timer( {gameOver} ) {\n    const [time, setTime] = useState(0);\n    const [timerOn, setTimerOn] = useState(true);\n    const scoresAnonymousRef = doc(db, 'scores', 'anonymousUser')\n    const [startTime, setStartTime] = useState(0);\n    const [endTime, setEndTime] = useState(0);\n\n async function saveDataStart() {\n    await updateDoc(scoresAnonymousRef, {\n        startTime: startTime,\n      });\n    }  \n\n\n  async function saveDataEnd() {\n    await updateDoc(scoresAnonymousRef, { endTime: endTime});\n  }\n\n\n    useEffect(() => {\n        let interval = null;\n\n        if(gameOver === true) {\n            setTimerOn(false)\n            setEndTime(Date.now()/1000)\n            saveDataEnd()\n            \n        }\n\n        if(timerOn && !gameOver) {\n          interval = setInterval(() => {\n            setTime(prevTime => prevTime + 10)\n          },10)\n          setStartTime(Date.now()/1000)\n          saveDataStart()\n        \n\n        } else {\n            clearInterval(interval)\n        }\n\n        return () => clearInterval(interval)\n\n    }, [timerOn, gameOver])\n\n\n\n    return (\n        <div className=\"timerContainer\">\n            <div>\n            <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n            <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n            <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}