{"ast":null,"code":"var _jsxFileName = \"/home/atsal/Desktop/top/secure-projects/waldogamef/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { doc, setDoc, Timestamp, updateDoc, getDocs, getDoc, collection } from \"firebase/firestore\";\nimport { db } from './firebase-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer(_ref) {\n  _s();\n\n  let {\n    gameOver,\n    setGameOver,\n    startTime,\n    setStartTime,\n    start,\n    setStart,\n    endTime,\n    setEndTime,\n    timerOn,\n    setTimerOn\n  } = _ref;\n  const [time, setTime] = useState(0);\n  const scoresAnonymousRef = doc(db, 'scores', 'anonymousUser');\n\n  async function saveDataStart() {\n    await updateDoc(scoresAnonymousRef, {\n      startTime: startTime\n    });\n  }\n\n  async function saveDataEnd() {\n    await updateDoc(scoresAnonymousRef, {\n      endTime: endTime\n    });\n  }\n\n  useEffect(() => {\n    let interval = null;\n\n    if (gameOver === true) {\n      setTimerOn(false);\n      saveDataEnd();\n    }\n\n    if (timerOn && gameOver === false) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn, gameOver]);\n  useEffect(() => {\n    if (start) {\n      saveDataStart();\n      setStart(false);\n    }\n  }, [start]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 60000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 1000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (\"0\" + time / 10 % 100).slice(-2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"IIqj0ldOnErWuN2rK16Cq/3hflo=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/atsal/Desktop/top/secure-projects/waldogamef/src/Timer.js"],"names":["React","useState","useEffect","doc","setDoc","Timestamp","updateDoc","getDocs","getDoc","collection","db","Timer","gameOver","setGameOver","startTime","setStartTime","start","setStart","endTime","setEndTime","timerOn","setTimerOn","time","setTime","scoresAnonymousRef","saveDataStart","saveDataEnd","interval","setInterval","prevTime","clearInterval","Math","floor","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,MAArD,EAA6DC,UAA7D,QAA+E,oBAA/E;AACA,SAASC,EAAT,QAAmB,mBAAnB;;;AAEA,SAASC,KAAT,OAA8H;AAAA;;AAAA,MAA9G;AAACC,IAAAA,QAAD;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA,KAAjD;AAAwDC,IAAAA,QAAxD;AAAkEC,IAAAA,OAAlE;AAA2EC,IAAAA,UAA3E;AAAuFC,IAAAA,OAAvF;AAAgGC,IAAAA;AAAhG,GAA8G;AAC1H,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMuB,kBAAkB,GAAGrB,GAAG,CAACO,EAAD,EAAK,QAAL,EAAe,eAAf,CAA9B;;AAGH,iBAAee,aAAf,GAA+B;AAC5B,UAAMnB,SAAS,CAACkB,kBAAD,EAAqB;AAChCV,MAAAA,SAAS,EAAEA;AADqB,KAArB,CAAf;AAGC;;AAGH,iBAAeY,WAAf,GAA6B;AAC3B,UAAMpB,SAAS,CAACkB,kBAAD,EAAqB;AAAEN,MAAAA,OAAO,EAAEA;AAAX,KAArB,CAAf;AACD;;AAGChB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,QAAQ,GAAG,IAAf;;AAEA,QAAGf,QAAQ,KAAK,IAAhB,EAAsB;AAClBS,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,MAAAA,WAAW;AAEd;;AAED,QAAGN,OAAO,IAAIR,QAAQ,KAAK,KAA3B,EAAkC;AAChCe,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BL,QAAAA,OAAO,CAACM,QAAQ,IAAIA,QAAQ,GAAG,EAAxB,CAAP;AACD,OAFqB,EAEpB,EAFoB,CAAtB;AAKD,KAND,MAMO;AACHC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH;;AAED,WAAO,MAAMG,aAAa,CAACH,QAAD,CAA1B;AAEH,GArBQ,EAqBN,CAACP,OAAD,EAAUR,QAAV,CArBM,CAAT;AAwBAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGc,KAAH,EAAS;AAETS,MAAAA,aAAa;AACbR,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACC;AACF,GANQ,EAMN,CAACD,KAAD,CANM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAA,8BACA;AAAA,mBAAO,CAAC,MAAMe,IAAI,CAACC,KAAL,CAAYV,IAAI,GAAG,KAAR,GAAiB,EAA5B,CAAP,EAAwCW,KAAxC,CAA8C,CAAC,CAA/C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,mBAAO,CAAC,MAAMF,IAAI,CAACC,KAAL,CAAYV,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAP,EAAuCW,KAAvC,CAA6C,CAAC,CAA9C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,kBAAO,CAAC,MAAQX,IAAI,GAAG,EAAR,GAAc,GAAtB,EAA4BW,KAA5B,CAAkC,CAAC,CAAnC;AAAP;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5DQtB,K;;KAAAA,K;AA+DT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { doc, setDoc, Timestamp, updateDoc, getDocs, getDoc, collection } from \"firebase/firestore\"; \nimport { db } from './firebase-config';\n\nfunction Timer( {gameOver, setGameOver, startTime, setStartTime, start, setStart, endTime, setEndTime, timerOn, setTimerOn} ) {\n    const [time, setTime] = useState(0);\n    const scoresAnonymousRef = doc(db, 'scores', 'anonymousUser')\n\n\n async function saveDataStart() {\n    await updateDoc(scoresAnonymousRef, {\n        startTime: startTime\n      });\n    }  \n\n\n  async function saveDataEnd() {\n    await updateDoc(scoresAnonymousRef, { endTime: endTime});\n  }\n\n\n    useEffect(() => {\n        let interval = null;\n\n        if(gameOver === true) {\n            setTimerOn(false)\n            saveDataEnd()\n            \n        }\n\n        if(timerOn && gameOver === false) {\n          interval = setInterval(() => {\n            setTime(prevTime => prevTime + 10)\n          },10)\n         \n\n        } else {\n            clearInterval(interval)\n        }\n\n        return () => clearInterval(interval)\n\n    }, [timerOn, gameOver])\n\n\n    useEffect(() => {\n      if(start){\n       \n      saveDataStart()\n      setStart(false) \n      }\n    }, [start])\n\n \n    return (\n        <div className=\"timerContainer\">\n            <div>\n            <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n            <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n            <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n         \n            </div>\n        </div>\n    )\n}\n\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}